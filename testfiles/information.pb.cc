// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: information.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "information.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Exam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Exam_reflection_ = NULL;
const ::google::protobuf::Descriptor* Grade_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Grade_reflection_ = NULL;
const ::google::protobuf::Descriptor* Person_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Person_reflection_ = NULL;
const ::google::protobuf::Descriptor* Students_information_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Students_information_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_information_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_information_2eproto() {
  protobuf_AddDesc_information_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "information.proto");
  GOOGLE_CHECK(file != NULL);
  Exam_descriptor_ = file->message_type(0);
  static const int Exam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exam, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exam, score_),
  };
  Exam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Exam_descriptor_,
      Exam::default_instance_,
      Exam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exam, _has_bits_[0]),
      -1,
      -1,
      sizeof(Exam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exam, _internal_metadata_),
      -1);
  Grade_descriptor_ = file->message_type(1);
  static const int Grade_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, homework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, exam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, total_),
  };
  Grade_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Grade_descriptor_,
      Grade::default_instance_,
      Grade_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, _has_bits_[0]),
      -1,
      -1,
      sizeof(Grade),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Grade, _internal_metadata_),
      -1);
  Person_descriptor_ = file->message_type(2);
  static const int Person_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, registered_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, grades_),
  };
  Person_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Person_descriptor_,
      Person::default_instance_,
      Person_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _has_bits_[0]),
      -1,
      -1,
      sizeof(Person),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _internal_metadata_),
      -1);
  Students_information_descriptor_ = file->message_type(3);
  static const int Students_information_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Students_information, person_),
  };
  Students_information_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Students_information_descriptor_,
      Students_information::default_instance_,
      Students_information_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Students_information, _has_bits_[0]),
      -1,
      -1,
      sizeof(Students_information),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Students_information, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_information_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Exam_descriptor_, &Exam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Grade_descriptor_, &Grade::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Person_descriptor_, &Person::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Students_information_descriptor_, &Students_information::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_information_2eproto() {
  delete Exam::default_instance_;
  delete Exam_reflection_;
  delete Grade::default_instance_;
  delete Grade_reflection_;
  delete Person::default_instance_;
  delete Person_reflection_;
  delete Students_information::default_instance_;
  delete Students_information_reflection_;
}

void protobuf_AddDesc_information_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_information_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021information.proto\"%\n\004Exam\022\016\n\006weight\030\002 "
    "\001(\005\022\r\n\005score\030\001 \001(\005\"=\n\005Grade\022\020\n\010homework\030"
    "\002 \003(\005\022\023\n\004exam\030\003 \001(\0132\005.Exam\022\r\n\005total\030\001 \001("
    "\005\"[\n\006Person\022\014\n\004name\030\001 \002(\t\022\013\n\003age\030\002 \001(\005\022\n"
    "\n\002id\030\003 \003(\005\022\022\n\nregistered\030\005 \001(\010\022\026\n\006grades"
    "\030\006 \003(\0132\006.Grade\"/\n\024Students_information\022\027"
    "\n\006person\030\001 \003(\0132\007.Person", 263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "information.proto", &protobuf_RegisterTypes);
  Exam::default_instance_ = new Exam();
  Grade::default_instance_ = new Grade();
  Person::default_instance_ = new Person();
  Students_information::default_instance_ = new Students_information();
  Exam::default_instance_->InitAsDefaultInstance();
  Grade::default_instance_->InitAsDefaultInstance();
  Person::default_instance_->InitAsDefaultInstance();
  Students_information::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_information_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_information_2eproto {
  StaticDescriptorInitializer_information_2eproto() {
    protobuf_AddDesc_information_2eproto();
  }
} static_descriptor_initializer_information_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Exam::kWeightFieldNumber;
const int Exam::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Exam::Exam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Exam)
}

void Exam::InitAsDefaultInstance() {
}

Exam::Exam(const Exam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Exam)
}

void Exam::SharedCtor() {
  _cached_size_ = 0;
  weight_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Exam::~Exam() {
  // @@protoc_insertion_point(destructor:Exam)
  SharedDtor();
}

void Exam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Exam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Exam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Exam_descriptor_;
}

const Exam& Exam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_information_2eproto();
  return *default_instance_;
}

Exam* Exam::default_instance_ = NULL;

Exam* Exam::New(::google::protobuf::Arena* arena) const {
  Exam* n = new Exam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Exam::Clear() {
// @@protoc_insertion_point(message_clear_start:Exam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Exam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Exam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(weight_, score_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Exam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Exam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 score = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_weight;
        break;
      }

      // optional int32 weight = 2;
      case 2: {
        if (tag == 16) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Exam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Exam)
  return false;
#undef DO_
}

void Exam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Exam)
  // optional int32 score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->score(), output);
  }

  // optional int32 weight = 2;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Exam)
}

::google::protobuf::uint8* Exam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Exam)
  // optional int32 score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->score(), target);
  }

  // optional int32 weight = 2;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Exam)
  return target;
}

int Exam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Exam)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 weight = 2;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weight());
    }

    // optional int32 score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Exam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Exam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Exam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Exam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Exam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Exam)
    MergeFrom(*source);
  }
}

void Exam::MergeFrom(const Exam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Exam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Exam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Exam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Exam::CopyFrom(const Exam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Exam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Exam::IsInitialized() const {

  return true;
}

void Exam::Swap(Exam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Exam::InternalSwap(Exam* other) {
  std::swap(weight_, other->weight_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Exam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Exam_descriptor_;
  metadata.reflection = Exam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Exam

// optional int32 weight = 2;
bool Exam::has_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Exam::set_has_weight() {
  _has_bits_[0] |= 0x00000001u;
}
void Exam::clear_has_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
void Exam::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
 ::google::protobuf::int32 Exam::weight() const {
  // @@protoc_insertion_point(field_get:Exam.weight)
  return weight_;
}
 void Exam::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:Exam.weight)
}

// optional int32 score = 1;
bool Exam::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Exam::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void Exam::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void Exam::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 Exam::score() const {
  // @@protoc_insertion_point(field_get:Exam.score)
  return score_;
}
 void Exam::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:Exam.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Grade::kHomeworkFieldNumber;
const int Grade::kExamFieldNumber;
const int Grade::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Grade::Grade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Grade)
}

void Grade::InitAsDefaultInstance() {
  exam_ = const_cast< ::Exam*>(&::Exam::default_instance());
}

Grade::Grade(const Grade& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Grade)
}

void Grade::SharedCtor() {
  _cached_size_ = 0;
  exam_ = NULL;
  total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Grade::~Grade() {
  // @@protoc_insertion_point(destructor:Grade)
  SharedDtor();
}

void Grade::SharedDtor() {
  if (this != default_instance_) {
    delete exam_;
  }
}

void Grade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Grade::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Grade_descriptor_;
}

const Grade& Grade::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_information_2eproto();
  return *default_instance_;
}

Grade* Grade::default_instance_ = NULL;

Grade* Grade::New(::google::protobuf::Arena* arena) const {
  Grade* n = new Grade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Grade::Clear() {
// @@protoc_insertion_point(message_clear_start:Grade)
  if (_has_bits_[0 / 32] & 6u) {
    if (has_exam()) {
      if (exam_ != NULL) exam_->::Exam::Clear();
    }
    total_ = 0;
  }
  homework_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Grade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Grade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_homework;
        break;
      }

      // repeated int32 homework = 2;
      case 2: {
        if (tag == 16) {
         parse_homework:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_homework())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_homework())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_homework;
        if (input->ExpectTag(26)) goto parse_exam;
        break;
      }

      // optional .Exam exam = 3;
      case 3: {
        if (tag == 26) {
         parse_exam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Grade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Grade)
  return false;
#undef DO_
}

void Grade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Grade)
  // optional int32 total = 1;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total(), output);
  }

  // repeated int32 homework = 2;
  for (int i = 0; i < this->homework_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->homework(i), output);
  }

  // optional .Exam exam = 3;
  if (has_exam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->exam_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Grade)
}

::google::protobuf::uint8* Grade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Grade)
  // optional int32 total = 1;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total(), target);
  }

  // repeated int32 homework = 2;
  for (int i = 0; i < this->homework_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->homework(i), target);
  }

  // optional .Exam exam = 3;
  if (has_exam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->exam_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Grade)
  return target;
}

int Grade::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Grade)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional .Exam exam = 3;
    if (has_exam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->exam_);
    }

    // optional int32 total = 1;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }

  }
  // repeated int32 homework = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->homework_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->homework(i));
    }
    total_size += 1 * this->homework_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Grade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Grade)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Grade* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Grade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Grade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Grade)
    MergeFrom(*source);
  }
}

void Grade::MergeFrom(const Grade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Grade)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  homework_.MergeFrom(from.homework_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_exam()) {
      mutable_exam()->::Exam::MergeFrom(from.exam());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Grade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Grade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grade::CopyFrom(const Grade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Grade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grade::IsInitialized() const {

  return true;
}

void Grade::Swap(Grade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Grade::InternalSwap(Grade* other) {
  homework_.UnsafeArenaSwap(&other->homework_);
  std::swap(exam_, other->exam_);
  std::swap(total_, other->total_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Grade::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Grade_descriptor_;
  metadata.reflection = Grade_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Grade

// repeated int32 homework = 2;
int Grade::homework_size() const {
  return homework_.size();
}
void Grade::clear_homework() {
  homework_.Clear();
}
 ::google::protobuf::int32 Grade::homework(int index) const {
  // @@protoc_insertion_point(field_get:Grade.homework)
  return homework_.Get(index);
}
 void Grade::set_homework(int index, ::google::protobuf::int32 value) {
  homework_.Set(index, value);
  // @@protoc_insertion_point(field_set:Grade.homework)
}
 void Grade::add_homework(::google::protobuf::int32 value) {
  homework_.Add(value);
  // @@protoc_insertion_point(field_add:Grade.homework)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Grade::homework() const {
  // @@protoc_insertion_point(field_list:Grade.homework)
  return homework_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Grade::mutable_homework() {
  // @@protoc_insertion_point(field_mutable_list:Grade.homework)
  return &homework_;
}

// optional .Exam exam = 3;
bool Grade::has_exam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Grade::set_has_exam() {
  _has_bits_[0] |= 0x00000002u;
}
void Grade::clear_has_exam() {
  _has_bits_[0] &= ~0x00000002u;
}
void Grade::clear_exam() {
  if (exam_ != NULL) exam_->::Exam::Clear();
  clear_has_exam();
}
const ::Exam& Grade::exam() const {
  // @@protoc_insertion_point(field_get:Grade.exam)
  return exam_ != NULL ? *exam_ : *default_instance_->exam_;
}
::Exam* Grade::mutable_exam() {
  set_has_exam();
  if (exam_ == NULL) {
    exam_ = new ::Exam;
  }
  // @@protoc_insertion_point(field_mutable:Grade.exam)
  return exam_;
}
::Exam* Grade::release_exam() {
  // @@protoc_insertion_point(field_release:Grade.exam)
  clear_has_exam();
  ::Exam* temp = exam_;
  exam_ = NULL;
  return temp;
}
void Grade::set_allocated_exam(::Exam* exam) {
  delete exam_;
  exam_ = exam;
  if (exam) {
    set_has_exam();
  } else {
    clear_has_exam();
  }
  // @@protoc_insertion_point(field_set_allocated:Grade.exam)
}

// optional int32 total = 1;
bool Grade::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Grade::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
void Grade::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
void Grade::clear_total() {
  total_ = 0;
  clear_has_total();
}
 ::google::protobuf::int32 Grade::total() const {
  // @@protoc_insertion_point(field_get:Grade.total)
  return total_;
}
 void Grade::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:Grade.total)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Person::kNameFieldNumber;
const int Person::kAgeFieldNumber;
const int Person::kIdFieldNumber;
const int Person::kRegisteredFieldNumber;
const int Person::kGradesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Person::Person()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Person)
}

void Person::InitAsDefaultInstance() {
}

Person::Person(const Person& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Person)
}

void Person::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  registered_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Person::~Person() {
  // @@protoc_insertion_point(destructor:Person)
  SharedDtor();
}

void Person::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Person::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Person::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Person_descriptor_;
}

const Person& Person::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_information_2eproto();
  return *default_instance_;
}

Person* Person::default_instance_ = NULL;

Person* Person::New(::google::protobuf::Arena* arena) const {
  Person* n = new Person;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Person::Clear() {
// @@protoc_insertion_point(message_clear_start:Person)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Person, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Person*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 11u) {
    ZR_(age_, registered_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  id_.Clear();
  grades_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Person)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Person.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_age;
        break;
      }

      // optional int32 age = 2;
      case 2: {
        if (tag == 16) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // repeated int32 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        if (input->ExpectTag(40)) goto parse_registered;
        break;
      }

      // optional bool registered = 5;
      case 5: {
        if (tag == 40) {
         parse_registered:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &registered_)));
          set_has_registered();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_grades;
        break;
      }

      // repeated .Grade grades = 6;
      case 6: {
        if (tag == 50) {
         parse_grades:
          DO_(input->IncrementRecursionDepth());
         parse_loop_grades:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_grades()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_grades;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Person)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Person)
  return false;
#undef DO_
}

void Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Person)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Person.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // repeated int32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->id(i), output);
  }

  // optional bool registered = 5;
  if (has_registered()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->registered(), output);
  }

  // repeated .Grade grades = 6;
  for (unsigned int i = 0, n = this->grades_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->grades(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Person)
}

::google::protobuf::uint8* Person::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Person)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Person.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // repeated int32 id = 3;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->id(i), target);
  }

  // optional bool registered = 5;
  if (has_registered()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->registered(), target);
  }

  // repeated .Grade grades = 6;
  for (unsigned int i = 0, n = this->grades_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->grades(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Person)
  return target;
}

int Person::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Person)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 10u) {
    // optional int32 age = 2;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional bool registered = 5;
    if (has_registered()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  // repeated .Grade grades = 6;
  total_size += 1 * this->grades_size();
  for (int i = 0; i < this->grades_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grades(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Person)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Person* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Person>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Person)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Person)
    MergeFrom(*source);
  }
}

void Person::MergeFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Person)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  id_.MergeFrom(from.id_);
  grades_.MergeFrom(from.grades_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_registered()) {
      set_registered(from.registered());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Person::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Person::CopyFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Person::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Person::Swap(Person* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Person::InternalSwap(Person* other) {
  name_.Swap(&other->name_);
  std::swap(age_, other->age_);
  id_.UnsafeArenaSwap(&other->id_);
  std::swap(registered_, other->registered_);
  grades_.UnsafeArenaSwap(&other->grades_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Person::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Person_descriptor_;
  metadata.reflection = Person_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Person

// required string name = 1;
bool Person::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Person::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Person::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Person::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:Person.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Person.name)
}
 void Person::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Person.name)
}
 void Person::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Person.name)
}
 ::std::string* Person::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Person.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Person::release_name() {
  // @@protoc_insertion_point(field_release:Person.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Person.name)
}

// optional int32 age = 2;
bool Person::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Person::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
void Person::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
void Person::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 Person::age() const {
  // @@protoc_insertion_point(field_get:Person.age)
  return age_;
}
 void Person::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:Person.age)
}

// repeated int32 id = 3;
int Person::id_size() const {
  return id_.size();
}
void Person::clear_id() {
  id_.Clear();
}
 ::google::protobuf::int32 Person::id(int index) const {
  // @@protoc_insertion_point(field_get:Person.id)
  return id_.Get(index);
}
 void Person::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Person.id)
}
 void Person::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:Person.id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Person::id() const {
  // @@protoc_insertion_point(field_list:Person.id)
  return id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Person::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:Person.id)
  return &id_;
}

// optional bool registered = 5;
bool Person::has_registered() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Person::set_has_registered() {
  _has_bits_[0] |= 0x00000008u;
}
void Person::clear_has_registered() {
  _has_bits_[0] &= ~0x00000008u;
}
void Person::clear_registered() {
  registered_ = false;
  clear_has_registered();
}
 bool Person::registered() const {
  // @@protoc_insertion_point(field_get:Person.registered)
  return registered_;
}
 void Person::set_registered(bool value) {
  set_has_registered();
  registered_ = value;
  // @@protoc_insertion_point(field_set:Person.registered)
}

// repeated .Grade grades = 6;
int Person::grades_size() const {
  return grades_.size();
}
void Person::clear_grades() {
  grades_.Clear();
}
const ::Grade& Person::grades(int index) const {
  // @@protoc_insertion_point(field_get:Person.grades)
  return grades_.Get(index);
}
::Grade* Person::mutable_grades(int index) {
  // @@protoc_insertion_point(field_mutable:Person.grades)
  return grades_.Mutable(index);
}
::Grade* Person::add_grades() {
  // @@protoc_insertion_point(field_add:Person.grades)
  return grades_.Add();
}
::google::protobuf::RepeatedPtrField< ::Grade >*
Person::mutable_grades() {
  // @@protoc_insertion_point(field_mutable_list:Person.grades)
  return &grades_;
}
const ::google::protobuf::RepeatedPtrField< ::Grade >&
Person::grades() const {
  // @@protoc_insertion_point(field_list:Person.grades)
  return grades_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Students_information::kPersonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Students_information::Students_information()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Students_information)
}

void Students_information::InitAsDefaultInstance() {
}

Students_information::Students_information(const Students_information& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Students_information)
}

void Students_information::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Students_information::~Students_information() {
  // @@protoc_insertion_point(destructor:Students_information)
  SharedDtor();
}

void Students_information::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Students_information::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Students_information::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Students_information_descriptor_;
}

const Students_information& Students_information::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_information_2eproto();
  return *default_instance_;
}

Students_information* Students_information::default_instance_ = NULL;

Students_information* Students_information::New(::google::protobuf::Arena* arena) const {
  Students_information* n = new Students_information;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Students_information::Clear() {
// @@protoc_insertion_point(message_clear_start:Students_information)
  person_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Students_information::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Students_information)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Person person = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_person:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_person()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_person;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Students_information)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Students_information)
  return false;
#undef DO_
}

void Students_information::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Students_information)
  // repeated .Person person = 1;
  for (unsigned int i = 0, n = this->person_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->person(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Students_information)
}

::google::protobuf::uint8* Students_information::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Students_information)
  // repeated .Person person = 1;
  for (unsigned int i = 0, n = this->person_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->person(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Students_information)
  return target;
}

int Students_information::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Students_information)
  int total_size = 0;

  // repeated .Person person = 1;
  total_size += 1 * this->person_size();
  for (int i = 0; i < this->person_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Students_information::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Students_information)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Students_information* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Students_information>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Students_information)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Students_information)
    MergeFrom(*source);
  }
}

void Students_information::MergeFrom(const Students_information& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Students_information)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  person_.MergeFrom(from.person_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Students_information::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Students_information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Students_information::CopyFrom(const Students_information& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Students_information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Students_information::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->person())) return false;
  return true;
}

void Students_information::Swap(Students_information* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Students_information::InternalSwap(Students_information* other) {
  person_.UnsafeArenaSwap(&other->person_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Students_information::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Students_information_descriptor_;
  metadata.reflection = Students_information_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Students_information

// repeated .Person person = 1;
int Students_information::person_size() const {
  return person_.size();
}
void Students_information::clear_person() {
  person_.Clear();
}
const ::Person& Students_information::person(int index) const {
  // @@protoc_insertion_point(field_get:Students_information.person)
  return person_.Get(index);
}
::Person* Students_information::mutable_person(int index) {
  // @@protoc_insertion_point(field_mutable:Students_information.person)
  return person_.Mutable(index);
}
::Person* Students_information::add_person() {
  // @@protoc_insertion_point(field_add:Students_information.person)
  return person_.Add();
}
::google::protobuf::RepeatedPtrField< ::Person >*
Students_information::mutable_person() {
  // @@protoc_insertion_point(field_mutable_list:Students_information.person)
  return &person_;
}
const ::google::protobuf::RepeatedPtrField< ::Person >&
Students_information::person() const {
  // @@protoc_insertion_point(field_list:Students_information.person)
  return person_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
