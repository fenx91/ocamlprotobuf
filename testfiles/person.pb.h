// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person.proto

#ifndef PROTOBUF_person_2eproto__INCLUDED
#define PROTOBUF_person_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class Home;
class HomeDefaultTypeInternal;
extern HomeDefaultTypeInternal _Home_default_instance_;
class Person;
class PersonDefaultTypeInternal;
extern PersonDefaultTypeInternal _Person_default_instance_;
class Phone;
class PhoneDefaultTypeInternal;
extern PhoneDefaultTypeInternal _Phone_default_instance_;

namespace protobuf_person_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_person_2eproto

// ===================================================================

class Phone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Phone) */ {
 public:
  Phone();
  virtual ~Phone();

  Phone(const Phone& from);

  inline Phone& operator=(const Phone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Phone& default_instance();

  static inline const Phone* internal_default_instance() {
    return reinterpret_cast<const Phone*>(
               &_Phone_default_instance_);
  }

  void Swap(Phone* other);

  // implements Message ----------------------------------------------

  inline Phone* New() const PROTOBUF_FINAL { return New(NULL); }

  Phone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Phone& from);
  void MergeFrom(const Phone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Phone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 number = 1;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Phone)
 private:
  void set_has_number();
  void clear_has_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 number_;
  friend struct  protobuf_person_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Home : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Home) */ {
 public:
  Home();
  virtual ~Home();

  Home(const Home& from);

  inline Home& operator=(const Home& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Home& default_instance();

  static inline const Home* internal_default_instance() {
    return reinterpret_cast<const Home*>(
               &_Home_default_instance_);
  }

  void Swap(Home* other);

  // implements Message ----------------------------------------------

  inline Home* New() const PROTOBUF_FINAL { return New(NULL); }

  Home* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Home& from);
  void MergeFrom(const Home& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Home* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  ::google::protobuf::int32 address() const;
  void set_address(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Home)
 private:
  void set_has_address();
  void clear_has_address();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 address_;
  friend struct  protobuf_person_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Person) */ {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  static inline const Person* internal_default_instance() {
    return reinterpret_cast<const Person*>(
               &_Person_default_instance_);
  }

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  inline Person* New() const PROTOBUF_FINAL { return New(NULL); }

  Person* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Person* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 names = 2;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 2;
  ::google::protobuf::int32 names(int index) const;
  void set_names(int index, ::google::protobuf::int32 value);
  void add_names(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      names() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_names();

  // repeated .Phone phones = 4;
  int phones_size() const;
  void clear_phones();
  static const int kPhonesFieldNumber = 4;
  const ::Phone& phones(int index) const;
  ::Phone* mutable_phones(int index);
  ::Phone* add_phones();
  ::google::protobuf::RepeatedPtrField< ::Phone >*
      mutable_phones();
  const ::google::protobuf::RepeatedPtrField< ::Phone >&
      phones() const;

  // optional .Home home = 3;
  bool has_home() const;
  void clear_home();
  static const int kHomeFieldNumber = 3;
  const ::Home& home() const;
  ::Home* mutable_home();
  ::Home* release_home();
  void set_allocated_home(::Home* home);

  // optional int32 age = 1;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 1;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Person)
 private:
  void set_has_age();
  void clear_has_age();
  void set_has_home();
  void clear_has_home();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > names_;
  ::google::protobuf::RepeatedPtrField< ::Phone > phones_;
  ::Home* home_;
  ::google::protobuf::int32 age_;
  friend struct  protobuf_person_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Phone

// optional int32 number = 1;
inline bool Phone::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Phone::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Phone::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Phone::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Phone::number() const {
  // @@protoc_insertion_point(field_get:Phone.number)
  return number_;
}
inline void Phone::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:Phone.number)
}

// -------------------------------------------------------------------

// Home

// optional int32 address = 1;
inline bool Home::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Home::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Home::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Home::clear_address() {
  address_ = 0;
  clear_has_address();
}
inline ::google::protobuf::int32 Home::address() const {
  // @@protoc_insertion_point(field_get:Home.address)
  return address_;
}
inline void Home::set_address(::google::protobuf::int32 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:Home.address)
}

// -------------------------------------------------------------------

// Person

// optional int32 age = 1;
inline bool Person::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 Person::age() const {
  // @@protoc_insertion_point(field_get:Person.age)
  return age_;
}
inline void Person::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:Person.age)
}

// repeated int32 names = 2;
inline int Person::names_size() const {
  return names_.size();
}
inline void Person::clear_names() {
  names_.Clear();
}
inline ::google::protobuf::int32 Person::names(int index) const {
  // @@protoc_insertion_point(field_get:Person.names)
  return names_.Get(index);
}
inline void Person::set_names(int index, ::google::protobuf::int32 value) {
  names_.Set(index, value);
  // @@protoc_insertion_point(field_set:Person.names)
}
inline void Person::add_names(::google::protobuf::int32 value) {
  names_.Add(value);
  // @@protoc_insertion_point(field_add:Person.names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Person::names() const {
  // @@protoc_insertion_point(field_list:Person.names)
  return names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Person::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:Person.names)
  return &names_;
}

// optional .Home home = 3;
inline bool Person::has_home() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_home() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_home() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person::clear_home() {
  if (home_ != NULL) home_->::Home::Clear();
  clear_has_home();
}
inline const ::Home& Person::home() const {
  // @@protoc_insertion_point(field_get:Person.home)
  return home_ != NULL ? *home_
                         : *::Home::internal_default_instance();
}
inline ::Home* Person::mutable_home() {
  set_has_home();
  if (home_ == NULL) {
    home_ = new ::Home;
  }
  // @@protoc_insertion_point(field_mutable:Person.home)
  return home_;
}
inline ::Home* Person::release_home() {
  // @@protoc_insertion_point(field_release:Person.home)
  clear_has_home();
  ::Home* temp = home_;
  home_ = NULL;
  return temp;
}
inline void Person::set_allocated_home(::Home* home) {
  delete home_;
  home_ = home;
  if (home) {
    set_has_home();
  } else {
    clear_has_home();
  }
  // @@protoc_insertion_point(field_set_allocated:Person.home)
}

// repeated .Phone phones = 4;
inline int Person::phones_size() const {
  return phones_.size();
}
inline void Person::clear_phones() {
  phones_.Clear();
}
inline const ::Phone& Person::phones(int index) const {
  // @@protoc_insertion_point(field_get:Person.phones)
  return phones_.Get(index);
}
inline ::Phone* Person::mutable_phones(int index) {
  // @@protoc_insertion_point(field_mutable:Person.phones)
  return phones_.Mutable(index);
}
inline ::Phone* Person::add_phones() {
  // @@protoc_insertion_point(field_add:Person.phones)
  return phones_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Phone >*
Person::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_list:Person.phones)
  return &phones_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Phone >&
Person::phones() const {
  // @@protoc_insertion_point(field_list:Person.phones)
  return phones_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_person_2eproto__INCLUDED
