// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "person.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PhoneDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Phone> {
} _Phone_default_instance_;
class HomeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Home> {
} _Home_default_instance_;
class PersonDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Person> {
} _Person_default_instance_;

namespace protobuf_person_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phone, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Phone, number_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home, address_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, home_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, phones_),
  1,
  ~0u,
  0,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 5, sizeof(Phone)},
  { 6, 11, sizeof(Home)},
  { 12, 20, sizeof(Person)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Phone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Home_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Person_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "person.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Phone_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Home_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Person_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Phone_default_instance_.DefaultConstruct();
  _Home_default_instance_.DefaultConstruct();
  _Person_default_instance_.DefaultConstruct();
  _Person_default_instance_.get_mutable()->home_ = const_cast< ::Home*>(
      ::Home::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014person.proto\"\027\n\005Phone\022\016\n\006number\030\001 \001(\005\""
      "\027\n\004Home\022\017\n\007address\030\001 \001(\005\"Q\n\006Person\022\013\n\003ag"
      "e\030\001 \001(\005\022\r\n\005names\030\002 \003(\005\022\023\n\004home\030\003 \001(\0132\005.H"
      "ome\022\026\n\006phones\030\004 \003(\0132\006.Phone"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 147);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "person.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_person_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Phone::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Phone::Phone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_person_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Phone)
}
Phone::Phone(const Phone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:Phone)
}

void Phone::SharedCtor() {
  _cached_size_ = 0;
  number_ = 0;
}

Phone::~Phone() {
  // @@protoc_insertion_point(destructor:Phone)
  SharedDtor();
}

void Phone::SharedDtor() {
}

void Phone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Phone::descriptor() {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[0].descriptor;
}

const Phone& Phone::default_instance() {
  protobuf_person_2eproto::InitDefaults();
  return *internal_default_instance();
}

Phone* Phone::New(::google::protobuf::Arena* arena) const {
  Phone* n = new Phone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Phone::Clear() {
// @@protoc_insertion_point(message_clear_start:Phone)
  number_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Phone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Phone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 number = 1;
      case 1: {
        if (tag == 8u) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Phone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Phone)
  return false;
#undef DO_
}

void Phone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Phone)
  // optional int32 number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Phone)
}

::google::protobuf::uint8* Phone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Phone)
  // optional int32 number = 1;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Phone)
  return target;
}

size_t Phone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Phone)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 number = 1;
  if (has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Phone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Phone)
  GOOGLE_DCHECK_NE(&from, this);
  const Phone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Phone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Phone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Phone)
    MergeFrom(*source);
  }
}

void Phone::MergeFrom(const Phone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Phone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_number()) {
    set_number(from.number());
  }
}

void Phone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Phone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Phone::CopyFrom(const Phone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Phone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Phone::IsInitialized() const {
  return true;
}

void Phone::Swap(Phone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Phone::InternalSwap(Phone* other) {
  std::swap(number_, other->number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Phone::GetMetadata() const {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Phone

// optional int32 number = 1;
bool Phone::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Phone::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
void Phone::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void Phone::clear_number() {
  number_ = 0;
  clear_has_number();
}
::google::protobuf::int32 Phone::number() const {
  // @@protoc_insertion_point(field_get:Phone.number)
  return number_;
}
void Phone::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:Phone.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Home::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Home::Home()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_person_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Home)
}
Home::Home(const Home& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:Home)
}

void Home::SharedCtor() {
  _cached_size_ = 0;
  address_ = 0;
}

Home::~Home() {
  // @@protoc_insertion_point(destructor:Home)
  SharedDtor();
}

void Home::SharedDtor() {
}

void Home::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Home::descriptor() {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[1].descriptor;
}

const Home& Home::default_instance() {
  protobuf_person_2eproto::InitDefaults();
  return *internal_default_instance();
}

Home* Home::New(::google::protobuf::Arena* arena) const {
  Home* n = new Home;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Home::Clear() {
// @@protoc_insertion_point(message_clear_start:Home)
  address_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Home::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Home)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 address = 1;
      case 1: {
        if (tag == 8u) {
          set_has_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Home)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Home)
  return false;
#undef DO_
}

void Home::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Home)
  // optional int32 address = 1;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Home)
}

::google::protobuf::uint8* Home::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Home)
  // optional int32 address = 1;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Home)
  return target;
}

size_t Home::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Home)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 address = 1;
  if (has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Home::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Home)
  GOOGLE_DCHECK_NE(&from, this);
  const Home* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Home>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Home)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Home)
    MergeFrom(*source);
  }
}

void Home::MergeFrom(const Home& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Home)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    set_address(from.address());
  }
}

void Home::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Home)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Home::CopyFrom(const Home& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Home)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Home::IsInitialized() const {
  return true;
}

void Home::Swap(Home* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Home::InternalSwap(Home* other) {
  std::swap(address_, other->address_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Home::GetMetadata() const {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Home

// optional int32 address = 1;
bool Home::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Home::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
void Home::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
void Home::clear_address() {
  address_ = 0;
  clear_has_address();
}
::google::protobuf::int32 Home::address() const {
  // @@protoc_insertion_point(field_get:Home.address)
  return address_;
}
void Home::set_address(::google::protobuf::int32 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:Home.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Person::kAgeFieldNumber;
const int Person::kNamesFieldNumber;
const int Person::kHomeFieldNumber;
const int Person::kPhonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Person::Person()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_person_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Person)
}
Person::Person(const Person& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      names_(from.names_),
      phones_(from.phones_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_home()) {
    home_ = new ::Home(*from.home_);
  } else {
    home_ = NULL;
  }
  age_ = from.age_;
  // @@protoc_insertion_point(copy_constructor:Person)
}

void Person::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&home_, 0, reinterpret_cast<char*>(&age_) -
    reinterpret_cast<char*>(&home_) + sizeof(age_));
}

Person::~Person() {
  // @@protoc_insertion_point(destructor:Person)
  SharedDtor();
}

void Person::SharedDtor() {
  if (this != internal_default_instance()) {
    delete home_;
  }
}

void Person::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Person::descriptor() {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[2].descriptor;
}

const Person& Person::default_instance() {
  protobuf_person_2eproto::InitDefaults();
  return *internal_default_instance();
}

Person* Person::New(::google::protobuf::Arena* arena) const {
  Person* n = new Person;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Person::Clear() {
// @@protoc_insertion_point(message_clear_start:Person)
  names_.Clear();
  phones_.Clear();
  if (has_home()) {
    GOOGLE_DCHECK(home_ != NULL);
    home_->::Home::Clear();
  }
  age_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Person)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 age = 1;
      case 1: {
        if (tag == 8u) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 names = 2;
      case 2: {
        if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_names())));
        } else if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_names())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Home home = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_home()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Phone phones = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_phones()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Person)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Person)
  return false;
#undef DO_
}

void Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Person)
  // optional int32 age = 1;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->age(), output);
  }

  // repeated int32 names = 2;
  for (int i = 0; i < this->names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->names(i), output);
  }

  // optional .Home home = 3;
  if (has_home()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->home_, output);
  }

  // repeated .Phone phones = 4;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->phones(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Person)
}

::google::protobuf::uint8* Person::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Person)
  // optional int32 age = 1;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->age(), target);
  }

  // repeated int32 names = 2;
  for (int i = 0; i < this->names_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->names(i), target);
  }

  // optional .Home home = 3;
  if (has_home()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->home_, false, target);
  }

  // repeated .Phone phones = 4;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->phones(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Person)
  return target;
}

size_t Person::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Person)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 names = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->names_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->names_size());
    total_size += data_size;
  }

  // repeated .Phone phones = 4;
  {
    unsigned int count = this->phones_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->phones(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .Home home = 3;
    if (has_home()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->home_);
    }

    // optional int32 age = 1;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Person)
  GOOGLE_DCHECK_NE(&from, this);
  const Person* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Person>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Person)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Person)
    MergeFrom(*source);
  }
}

void Person::MergeFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Person)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  names_.MergeFrom(from.names_);
  phones_.MergeFrom(from.phones_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_home()) {
      mutable_home()->::Home::MergeFrom(from.home());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
  }
}

void Person::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Person::CopyFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Person::IsInitialized() const {
  return true;
}

void Person::Swap(Person* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Person::InternalSwap(Person* other) {
  names_.UnsafeArenaSwap(&other->names_);
  phones_.UnsafeArenaSwap(&other->phones_);
  std::swap(home_, other->home_);
  std::swap(age_, other->age_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Person::GetMetadata() const {
  protobuf_person_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_person_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Person

// optional int32 age = 1;
bool Person::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Person::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
void Person::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
void Person::clear_age() {
  age_ = 0;
  clear_has_age();
}
::google::protobuf::int32 Person::age() const {
  // @@protoc_insertion_point(field_get:Person.age)
  return age_;
}
void Person::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:Person.age)
}

// repeated int32 names = 2;
int Person::names_size() const {
  return names_.size();
}
void Person::clear_names() {
  names_.Clear();
}
::google::protobuf::int32 Person::names(int index) const {
  // @@protoc_insertion_point(field_get:Person.names)
  return names_.Get(index);
}
void Person::set_names(int index, ::google::protobuf::int32 value) {
  names_.Set(index, value);
  // @@protoc_insertion_point(field_set:Person.names)
}
void Person::add_names(::google::protobuf::int32 value) {
  names_.Add(value);
  // @@protoc_insertion_point(field_add:Person.names)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Person::names() const {
  // @@protoc_insertion_point(field_list:Person.names)
  return names_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Person::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:Person.names)
  return &names_;
}

// optional .Home home = 3;
bool Person::has_home() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Person::set_has_home() {
  _has_bits_[0] |= 0x00000001u;
}
void Person::clear_has_home() {
  _has_bits_[0] &= ~0x00000001u;
}
void Person::clear_home() {
  if (home_ != NULL) home_->::Home::Clear();
  clear_has_home();
}
const ::Home& Person::home() const {
  // @@protoc_insertion_point(field_get:Person.home)
  return home_ != NULL ? *home_
                         : *::Home::internal_default_instance();
}
::Home* Person::mutable_home() {
  set_has_home();
  if (home_ == NULL) {
    home_ = new ::Home;
  }
  // @@protoc_insertion_point(field_mutable:Person.home)
  return home_;
}
::Home* Person::release_home() {
  // @@protoc_insertion_point(field_release:Person.home)
  clear_has_home();
  ::Home* temp = home_;
  home_ = NULL;
  return temp;
}
void Person::set_allocated_home(::Home* home) {
  delete home_;
  home_ = home;
  if (home) {
    set_has_home();
  } else {
    clear_has_home();
  }
  // @@protoc_insertion_point(field_set_allocated:Person.home)
}

// repeated .Phone phones = 4;
int Person::phones_size() const {
  return phones_.size();
}
void Person::clear_phones() {
  phones_.Clear();
}
const ::Phone& Person::phones(int index) const {
  // @@protoc_insertion_point(field_get:Person.phones)
  return phones_.Get(index);
}
::Phone* Person::mutable_phones(int index) {
  // @@protoc_insertion_point(field_mutable:Person.phones)
  return phones_.Mutable(index);
}
::Phone* Person::add_phones() {
  // @@protoc_insertion_point(field_add:Person.phones)
  return phones_.Add();
}
::google::protobuf::RepeatedPtrField< ::Phone >*
Person::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_list:Person.phones)
  return &phones_;
}
const ::google::protobuf::RepeatedPtrField< ::Phone >&
Person::phones() const {
  // @@protoc_insertion_point(field_list:Person.phones)
  return phones_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
